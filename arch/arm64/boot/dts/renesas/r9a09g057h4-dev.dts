// SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
/*
 * Device Tree Source for the RZ/V2H Development EVK board
 *
 * Copyright (C) 2022 Renesas Electronics Corp.
 */

/dts-v1/;
#include "r9a09g057.dtsi"
#include <dt-bindings/pinctrl/rzg2l-pinctrl.h>
#include <dt-bindings/gpio/gpio.h>

/*
 * Jumper setting
 *
 * Please change the jumper setting corresponding to below Macros:
 *
 * SW2 (SEL_SD0): 1: eMMC (default);	0: SD
 */

/*
 * There is a conflict between SD0_PWR_EN pin and SD1_CD pins.
 * They all use PA1 pin.
 * So SD0 and SD1 can not be used at the same time.
 * Just only one SDHI interface must be choosen.
 * Macro to select between SDHI0 and SDHI1:
 * SEL_SD0_SD1:	0: SDHI0	1: SDHI1
 *
 * JP7 is a connection between QSD1_CD and PA1 pins.
 * JP7_34 (connect QSD1_CD to PA1):
 *      0 (open):       unconnected
 *      1 (short):      connected
 */

#define SEL_SD0_SD1	0
#if (SEL_SD0_SD1)
#define JP7_34  1
#else
#define SW2	1
#define JP7_34	0
#endif

/ {
	model = "Renesas Development EVK based on r9a09g057h4";
	compatible = "renesas,r9a09g057h4-dev", "renesas,r9a09g057h4", "renesas,r9a09g057";

	aliases {
		serial0 = &scif0;
#if (!SEL_SD0_SD1)
		mmc0 = &sdhi0;
#else
		mmc1 = &sdhi1;
#endif
	};

	memory@48000000 {
		device_type = "memory";
		/* first 128MB is reserved for secure area. */
		reg = <0x0 0x48000000 0x0 0x78000000>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		global_cma: linux,cma@58000000 {
			compatible = "shared-dma-pool";
			linux,cma-default;
			reusable;
			reg = <0x0 0x58000000 0x0 0x10000000>;
		};
	};

	reg_1p8v: regulator0 {
		compatible = "regulator-fixed";

		regulator-name = "fixed-1.8V";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-boot-on;
		regulator-always-on;
	};

	reg_3p3v: regulator1 {
		compatible = "regulator-fixed";

		regulator-name = "fixed-3.3V";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
		regulator-always-on;
	};

#if (!SEL_SD0_SD1)
	vccq_sdhi0: regulator-vccq-sdhi0 {
		compatible = "regulator-gpio";

		regulator-name = "SDHI0 VccQ";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;

		gpios = <&pinctrl RZG2L_GPIO(10, 0) GPIO_ACTIVE_HIGH>;

		gpios-states = <1>;
		states = <3300000 0 1800000 1>;
	};
#else
	vccq_sdhi1: regulator-vccq-sdhi1 {
		compatible = "regulator-gpio";

		regulator-name = "SDHI1 VccQ";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;

		gpios = <&pinctrl RZG2L_GPIO(10, 2) GPIO_ACTIVE_HIGH>;

		gpios-states = <1>;
		states = <3300000 0 1800000 1>;
	};
#endif
};

&pinctrl {
	scif0_pins: scif0 {
		pins =  "SCIF_RXD", "SCIF_TXD";
	};

#if (!SEL_SD0_SD1)
	sd0_pwr_en {
		gpio-hog;
		gpios = <RZG2L_GPIO(10, 1) GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "sd0_pwr_en";
	};
#else
	sd1_pwr_en {
		gpio-hog;
		gpios = <RZG2L_GPIO(10, 3) GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "sd1_pwr_en";
	};
#endif

#if (!SEL_SD0_SD1)
#if (SW12)
	/* Support pinctrl for MMC function of SDHI0*/
	sdhi0_pins: sd0 {
		sd0_data {
			pins =	"QSD0_DATA0", "QSD0_DATA1", "QSD0_DATA2",
				"QSD0_DATA3", "QSD0_DATA4", "QSD0_DATA5",
				"QSD0_DATA6", "QSD0_DATA7";
		};

		sd0_ctrl {
			pins =	"QSD0_CLK", "QSD0_CMD", "QSD0_RST_N";
		};
	};
#else
        /* Support pinctrl for SD function of SDHI0 */
        sdhi0_pins: sd0 {
		sd0_data {
			pins =	"QSD0_DATA0", "QSD0_DATA1", "QSD0_DATA2",
				"QSD0_DATA3";
		};

		sd0_ctrl {
			pins = "QSD0_CLK", "QSD0_CMD";
		};

		sd0_mux {
			pinmux = <RZG2L_PORT_PINMUX(9, 4, 15)>; /* SD0_CD */
		};
	};
#endif
#else
        sdhi1_pins: sd1 {
		sd1_data {
			pins =	"QSD1_DATA0", "QSD1_DATA1", "QSD1_DATA2",
				"QSD1_DATA3";
		};

		sd1_ctrl {
			pins = "QSD1_CLK", "QSD1_CMD";
		};

		sd1_mux {
			pinmux = <RZG2L_PORT_PINMUX(10, 1, 14)>; /* SD1_CD */
		};
	};
#endif
};

&extal_clk {
	clock-frequency = <24000000>;
};

&ostm0 {
	status = "okay";
};

&ostm1 {
	status = "okay";
};

&scif0 {
	pinctrl-0 = <&scif0_pins>;
	pinctrl-names = "default";

	status = "okay";
};

#if (!SEL_SD0_SD1)
#if (SW12)
&sdhi0 {
	pinctrl-0 = <&sdhi0_pins>;
	pinctrl-names = "default";

	vmmc-supply = <&reg_3p3v>;
	vqmmc-supply = <&reg_1p8v>;
	bus-width = <8>;
	mmc-hs200-1_8v;
	non-removable;
	fixed-emmc-driver-type = <1>;
	status = "okay";
};
#else
&sdhi0 {
	pinctrl-0 = <&sdhi0_pins>;
	pinctrl-names = "default";

	vmmc-supply = <&reg_3p3v>;
	vqmmc-supply = <&vccq_sdhi0>;

	bus-width = <4>;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	status = "okay";
};
#endif
#else
&sdhi1 {
	pinctrl-0 = <&sdhi1_pins>;
	pinctrl-names = "default";

	vmmc-supply = <&reg_3p3v>;
	vqmmc-supply = <&vccq_sdhi1>;

	bus-width = <4>;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	status = "okay";
};
#endif
